<?php

/**
 * @file
 * Custom University of Missouri - Kansas City customizations for Islandora.
 */

/**
 * Implements hook_islandora_required_objects().
 */
function umkcdora_islandora_required_objects(IslandoraTuque $connection) {
  module_load_include('inc', 'umkcdora', 'includes/utilities');
  return array(
    'umkcdora' => array(
      'title' => t('University of Missouri - Kansas City'),
      'objects' => umkcdora_construct_required_objects(),
    ),
  );
}

/**
 * Implements hook_islandora_xml_form_builder_forms().
 */
function umkcdora_islandora_xml_form_builder_forms() {
  module_load_include('inc', 'umkcdora', 'includes/utilities');
  return umkcdora_retrieve_xml_form_builder_forms();
}

/**
 * Implements hook_islandora_xml_form_builder_form_associations().
 */
function umkcdora_islandora_xml_form_builder_form_associations() {
  module_load_include('inc', 'umkcdora', 'includes/utilities');
  return umkcdora_retrieve_xml_form_builder_form_associations();
}

/**
 * Implements hook_islandora_ingest_steps().
 *
 * The purpose of these ingest steps is to allow UMKC to add a second content
 * model on to an object at ingest time based upon the mappigns defined
 * in the utilities.inc file. This is being used so that UMKC can retain the
 * view object code for types like books and videos while defining custom forms
 * and metadata display based upon their more granular types.
 */
function umkcdora_islandora_ingest_steps(&$form_state) {
  module_load_include('inc', 'umkcdora', 'includes/utilities');
  $umkc_ingest_steps = array();
  $umkc_content_models = umkcdora_retrieve_content_model_mappings();
  $content_model_mappings = array();
  $object_content_models = $form_state['islandora']['shared_storage']['models'];
  // See if the current object being ingested has a UMKC defined mapping.
  foreach ($object_content_models as $cmodel) {
    if (isset($umkc_content_models[$cmodel])) {
      foreach ($umkc_content_models[$cmodel]['mappings'] as $map) {
        $content_model_mappings[] = $map;
      }
    }
  }
  if ($content_model_mappings) {
    $form_state['umkc']['mappings'] = $content_model_mappings;
    // If there is more than one mapping we will need to let the user decide
    // which to use.
    if (count($content_model_mappings) > 1) {
      $umkc_ingest_steps['umkc_select_additional_content_model'] = array(
        'weight' => 0.10,
        'type' => 'form',
        'form_id' => 'umkcdora_select_additional_content_model_form',
        'module' => 'umkcdora',
        'file' => 'includes/ingest_steps.inc',
      );
    }
    // Add the additional content model to the object.
    $umkc_ingest_steps['umkc_add_content_model'] = array(
      'weight' => 0.25,
      'type' => 'callback',
      'module' => 'umkcdora',
      'do_function' => array(
        'function' => 'umkcdora_add_content_model',
        'args' => array($form_state),
        'file' => 'includes/ingest_steps.inc',
      ),
      'undo_function' => array(
        'function' => 'umkcdora_remove_content_model',
        'args' => array($form_state),
        'file' => 'includes/ingest_steps.inc',
      ),
    );
  }
  return $umkc_ingest_steps;
}

/**
 * Implements hook_islandora_view_object().
 */
function umkcdora_islandora_view_object($object, $user, $page_number) {
  // Force the display label to come from the DC rather than the object label.
  if (isset($object['DC'])) {
    $doc = new DOMDocument();
    if (@$doc->loadXML($object['DC']->content)) {
      $xpath = new DOMXPath($doc);
      $xpath->registerNamespace('dc', 'http://purl.org/dc/elements/1.1/');
      $title = $xpath->evaluate('string(//dc:title[1])');
      if (!empty($title)) {
        drupal_set_title($title);
      }
    }
  }

  $models = array(
    'islandora:newspaperCModel',
    'islandora:newspaperIssueCModel',
    'islandora:newspaperPageCModel',
    'islandora:bookCModel',
  );

  if (array_intersect($object->models, $models)) {
    module_load_include('inc', 'islandora', 'includes/metadata');

    return array(
      'umkcdora_description_metadata' => array(
        '#weight' => 10,
        '#markup' => islandora_retrieve_description_markup($object),
      ),
      'umkcdora_collection_info' => array(
        '#type' => 'markup',
        '#weight' => 11,
        '#theme' => 'umkcdora_collection_info',
        '#islandora_object' => $object,
      ),
      'umkcdora_detailed_metadata' => array(
        '#weight' => 12,
        '#markup' => islandora_retrieve_metadata_markup($object),
      ),
    );
  }
}

/**
 * Implements hook_CMODEL_PID_islandora_view_object().
 */
function umkcdora_islandora_collectioncmodel_islandora_view_object($object, $user, $page_number) {
  module_load_include('inc', 'islandora', 'includes/metadata');

  return array(
    'umkcdora_detailed_metadata' => array(
      '#weight' => -1,
      '#prefix' => '<div class="umkcdora-detailed-collection-metadata">',
      '#suffix' => '</div>',
      '#markup' => islandora_retrieve_metadata_markup($object, TRUE),
    ),
  );
}

/**
 * Implements hook_preprocess_islandora_solr_metadata_description().
 *
 * Adds a field into the description display, and disables the combination of
 * different descriptions.
 */
function umkcdora_preprocess_islandora_solr_metadata_description(array &$variables) {
  $date_solr_field = variable_get('umkcdora_date_metadata_field', 'dc.date');
  $variables['combine'] = FALSE;
  $variables['solr_fields'][$date_solr_field] = array(
    'display_label' => t('Date'),
    'weight' => 1,
    'value' => array(),
  );
}

/**
 * Implements hook_theme().
 */
function umkcdora_theme() {
  $item = array();

  $item['umkcdora_collection_info'] = array(
    'variables' => array(
      'islandora_object' => NULL,
    ),
    'file' => 'theme/theme.inc',
    'template' => 'theme/umkcdora-collection-info',
  );

  return $item;
}

/**
 * Implements hook_preprocess_HOOK().
 *
 * Get rid of the DC array, 'cause we don't want it.
 */
function umkcdora_preprocess_islandora_basic_collection_wrapper(&$variables) {
  $variables['dc_array'] = array();
}

/**
 * Alter the image_field_caption field to look like it takes a URL.
 */
function umkcdora_field_widget_form_alter(&$element, &$form_state, $context) {
  // Add display_field setting to field because file_field_widget_form() assumes
  // it is set.
  $instance = $context['instance'];
  $settings = $instance['settings'];

  if (isset($settings['image_field_caption']) && $instance['widget']['type'] == 'image_image' && $settings['image_field_caption']) {
    foreach (element_children($element) as $delta) {
      // Add all extra functionality provided by the image widget.
      $element[$delta]['#process'][] = 'umkcdora_image_field_caption_widget_process';
    }
  }
}

/**
 * An element #process callback for the image_image field type.
 *
 * Expands the image_image type to include the alt and title fields.
 */
function umkcdora_image_field_caption_widget_process($element, &$form_state, $form) {
  // Add the additional alt and title fields.
  $element['image_field_caption']['#title'] = t('Link');
  $element['image_field_caption']['#base_type'] = 'textfield';
  $element['image_field_caption']['#format'] = 'plain_text';
  $element['image_field_caption']['#description'] = 'The link the image will redirect to.';
  return $element;
}

/**
 * Implements hook_block_info().
 */
function umkcdora_block_info() {
  return array(
    'umkcdora_mobile_facets' => array(
      'info' => t('UMKC Mobile Facet Display'),
      'name' => t('UMKC Mobile Facet Display'),
      'cache' => DRUPAL_NO_CACHE,
      'region' => 'content',
      'status' => 1,
      'weight' => -1,
      'visibility' => BLOCK_VISIBILITY_LISTED,
      'pages' => implode("\n", array('islandora/search/*')),
    ),
  );
}

/**
 * Implements hook_block_view().
 */
function umkcdora_block_view($block_name = '') {
  module_load_include('inc', 'islandora_solr_search', 'includes/blocks');
  // This example is adapted from node.module.
  $block = array();
  if ($block_name == 'umkcdora_mobile_facets') {
    $block = islandora_solr_block_view('basic_facets');
    $block['subject'] = '<none>';
    $fieldset = array(
      '#type' => 'fieldset',
      '#title' => t('Refine Search'),
      '#attributes' => array('class' => array('collapsible', 'collapsed')),
      '#attached' => array('js' => array('misc/collapse.js', 'misc/form.js')),
      'content' => array(
        '#markup' => $block['content'],
      ),
    );
    $block['content'] = drupal_render($fieldset);
  }
  return $block;
}

/**
 * Implements hook_menu().
 */
function umkcdora_menu() {
  $items = array();

  $items['admin/islandora/umkcdora'] = array(
    'title' => 'UMKC Configuration',
    'access arguments' => array('administer site configuration'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('umkcdora_admin_form'),
    'file' => 'includes/admin.form.inc',
  );

  return $items;
}
